INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 7
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [global_statement -> empty] with [None] and goto state 5
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [import_statement -> KIMPORT STRING] with ['import','"fmt"'] and goto state 12
INFO:root:Result : <tuple @ 0x1f76d696080> (('import', '"fmt"'))
INFO:root:Action : Reduce rule [type -> KINT] with ['int'] and goto state 21
INFO:root:Result : <str @ 0x1f76d65b1f0> ('int')
INFO:root:Action : Reduce rule [expression -> INT] with [3] and goto state 35
INFO:root:Result : <int @ 0x1f76ca16970> (3)
INFO:root:Action : Reduce rule [expr_cond -> expression] with [3] and goto state 34
INFO:root:Result : <int @ 0x1f76ca16970> (3)
INFO:root:Action : Reduce rule [assign_expr -> = expr_cond] with ['=',3] and goto state 29
INFO:root:Result : <int @ 0x1f76ca16970> (3)
INFO:root:Action : Reduce rule [global_var_assign_statement -> KVAR ID type assign_expr] with ['var','x','int',3] and goto state 8
INFO:root:Result : <tuple @ 0x1f76d570e50> (('global_var_assign', 'x', 'int', 3))
INFO:root:Action : Reduce rule [global_assign_statement -> global_var_assign_statement] with [<tuple @ 0x1f76d570e50>] and goto state 6
INFO:root:Result : <tuple @ 0x1f76d570e50> (('global_var_assign', 'x', 'int', 3))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 7
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [global_statement -> empty] with [None] and goto state 20
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [global_statement -> global_assign_statement NLD global_statement] with [<tuple @ 0x1f76d570e50>,'\n\n',()] and goto state 27
INFO:root:Result : <tuple @ 0x1f76d5c46d0> ((('global_var_assign', 'x', 'int', 3),))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 82
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_oper -> PE] with ['+='] and goto state 142
INFO:root:Result : <str @ 0x1f76d65b0b0> ('+=')
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 159
INFO:root:Result : <int @ 0x1f76ca16930> (1)
INFO:root:Action : Reduce rule [reassign_statement -> ID assign_oper expression] with ['x','+=',1] and goto state 102
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_statement -> reassign_statement NLD] with [None,'\n'] and goto state 90
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [type -> KSTRING] with ['string'] and goto state 156
INFO:root:Result : <str @ 0x1f76d65b0b0> ('string')
INFO:root:Action : Reduce rule [expression -> STRING] with ['"123"'] and goto state 35
INFO:root:Result : <str @ 0x1f76d6616f0> ('123')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['123'] and goto state 34
INFO:root:Result : <str @ 0x1f76d6616f0> ('123')
INFO:root:Action : Reduce rule [assign_expr -> = expr_cond] with ['=','123'] and goto state 171
INFO:root:Result : <str @ 0x1f76d6616f0> ('123')
INFO:root:Action : Reduce rule [var_assign_statement -> KVAR ID type assign_expr] with ['var','y','string','123'] and goto state 98
INFO:root:Result : <tuple @ 0x1f76d580770> (('var', 'y', 'string', '123'))
INFO:root:Action : Reduce rule [assign_statement -> var_assign_statement NLD] with [<tuple @ 0x1f76d580770>,'\n'] and goto state 90
INFO:root:Result : <tuple @ 0x1f76d580770> (('var', 'y', 'string', '123'))
INFO:root:Action : Reduce rule [type -> KBOOL] with ['bool'] and goto state 156
INFO:root:Result : <str @ 0x1f76d661630> ('bool')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 31
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_expr -> empty] with [None] and goto state 171
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [var_assign_statement -> KVAR ID type assign_expr] with ['var','z','bool',None] and goto state 98
INFO:root:Result : <tuple @ 0x1f76d580400> (('var', 'z', 'bool', None))
INFO:root:Action : Reduce rule [assign_statement -> var_assign_statement NLD] with [<tuple @ 0x1f76d580400>,'\n'] and goto state 90
INFO:root:Result : <tuple @ 0x1f76d580400> (('var', 'z', 'bool', None))
INFO:root:Action : Reduce rule [FOR -> KFOR] with ['for'] and goto state 97
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> INT] with [0] and goto state 35
INFO:root:Result : <int @ 0x1f76ca16910> (0)
INFO:root:Action : Reduce rule [expr_cond -> expression] with [0] and goto state 157
INFO:root:Result : <int @ 0x1f76ca16910> (0)
INFO:root:Action : Reduce rule [def_statement -> ID DEF expr_cond] with ['i',':=',0] and goto state 126
INFO:root:Result : <tuple @ 0x1f76d5803b0> (('def', 'i', <class 'int'>, 0))
INFO:root:Action : Reduce rule [single_line_statement_1 -> def_statement] with [<tuple @ 0x1f76d5803b0>] and goto state 122
INFO:root:Result : <tuple @ 0x1f76d5803b0> (('def', 'i', <class 'int'>, 0))
INFO:root:Action : Reduce rule [expression -> ID] with ['i'] and goto state 68
INFO:root:Result : <int @ 0x1f76ca16910> (0)
INFO:root:Action : Reduce rule [rel_op -> LT] with ['<'] and goto state 46
INFO:root:Result : <str @ 0x1f76d211fb0> ('<')
INFO:root:Action : Reduce rule [expression -> INT] with [10] and goto state 71
INFO:root:Result : <int @ 0x1f76ca16a50> (10)
INFO:root:Action : Reduce rule [condition -> expression rel_op expression] with [0,'<',10] and goto state 168
INFO:root:Result : <bool @ 0x7ffed375d868> (True)
INFO:root:Action : Reduce rule [increase_statement -> ID PP] with ['i','++'] and goto state 128
INFO:root:Result : <tuple @ 0x1f76d6920c0> (('increase', 'i'))
INFO:root:Action : Reduce rule [single_line_statement_2 -> increase_statement] with [<tuple @ 0x1f76d6920c0>] and goto state 195
INFO:root:Result : <tuple @ 0x1f76d6920c0> (('increase', 'i'))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 221
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> ID] with ['i'] and goto state 68
INFO:root:Result : <int @ 0x1f76ca16930> (1)
INFO:root:Action : Reduce rule [oper -> %] with ['%'] and goto state 45
INFO:root:Result : <str @ 0x1f76cf8e1b0> ('%')
INFO:root:Action : Reduce rule [expression -> INT] with [2] and goto state 70
INFO:root:Result : <int @ 0x1f76ca16950> (2)
INFO:root:Action : Reduce rule [expression -> expression oper expression] with [1,'%',2] and goto state 68
INFO:root:Result : <int @ 0x1f76ca16930> (1)
INFO:root:Action : Reduce rule [rel_op -> EQ] with ['=='] and goto state 46
INFO:root:Result : <str @ 0x1f76d6610b0> ('==')
INFO:root:Action : Reduce rule [expression -> INT] with [0] and goto state 71
INFO:root:Result : <int @ 0x1f76ca16910> (0)
INFO:root:Action : Reduce rule [condition -> expression rel_op expression] with [1,'==',0] and goto state 119
INFO:root:Result : <bool @ 0x7ffed375d888> (False)
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 162
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> STRING] with ['"even"'] and goto state 35
INFO:root:Result : <str @ 0x1f76d65fcb0> ('even')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['even'] and goto state 173
INFO:root:Result : <str @ 0x1f76d65fcb0> ('even')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [args -> empty] with [None] and goto state 184
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [print_statement -> KFMT . KPRINT ( expr_cond args ) NLD] with ['fmt','.','Println','(','even',(),')','\n'] and goto state 86
INFO:root:Result : <tuple @ 0x1f76d691e40> (('print', 'even'))
INFO:root:Action : Reduce rule [continue_statement -> KCONTINUE] with ['continue'] and goto state 92
INFO:root:Result : <tuple @ 0x1f76cf6b100> (('continue',))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 117
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [statement -> continue_statement statement] with [('continue',),()] and goto state 111
INFO:root:Result : <tuple @ 0x1f76d5bc490> ((('continue',),))
INFO:root:Action : Reduce rule [statement -> print_statement statement] with [<tuple @ 0x1f76d691e40>,<tuple @ 0x1f76d5bc490>] and goto state 174
INFO:root:Result : <tuple @ 0x1f76d6905c0> ((('print', 'even'), ('continue',)))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 187
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 234
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> STRING] with ['"odd"'] and goto state 35
INFO:root:Result : <str @ 0x1f76d65f970> ('odd')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['odd'] and goto state 173
INFO:root:Result : <str @ 0x1f76d65f970> ('odd')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 186
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [args -> empty] with [None] and goto state 184
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [print_statement -> KFMT . KPRINT ( expr_cond args ) NLD] with ['fmt','.','Println','(','odd',(),')','\n'] and goto state 86
INFO:root:Result : <tuple @ 0x1f76d690200> (('print', 'odd'))
INFO:root:Action : Reduce rule [continue_statement -> KCONTINUE] with ['continue'] and goto state 92
INFO:root:Result : <tuple @ 0x1f76cf6b100> (('continue',))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 117
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [statement -> continue_statement statement] with [('continue',),()] and goto state 111
INFO:root:Result : <tuple @ 0x1f76d5bc490> ((('continue',),))
INFO:root:Action : Reduce rule [statement -> print_statement statement] with [<tuple @ 0x1f76d690200>,<tuple @ 0x1f76d5bc490>] and goto state 240
INFO:root:Result : <tuple @ 0x1f76d690180> ((('print', 'odd'), ('continue',)))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 244
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [else_statement -> KELSE { NL statement NL }] with ['else','{',None,<tuple @ 0x1f76d690180>,None,'}'] and goto state 211
INFO:root:Result : <tuple @ 0x1f76d690140> (('else', (('print', 'odd'), ('continue', ...)
INFO:root:Action : Reduce rule [if_statement -> KIF condition { NL statement NL } else_statement NLD] with ['if',False,'{',None,<tuple @ 0x1f76d6905c0>,None,'}',<tuple @ 0x1f76d690140>,'\n'] and goto state 87
INFO:root:Result : <tuple @ 0x1f76d65dfc0> ((('if', False, (('print', 'even'), ('con ...)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 112
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [statement -> if_statement statement] with [<tuple @ 0x1f76d65dfc0>,()] and goto state 232
INFO:root:Result : <tuple @ 0x1f76d5bc490> (((('if', False, (('print', 'even'), ('co ...)
INFO:root:Action : Reduce rule [for_statement -> FOR single_line_statement_1 ; condition ; single_line_statement_2 { NL statement }] with [None,<tuple @ 0x1f76d5803b0>,';',True,';',<tuple @ 0x1f76d6920c0>,'{',None,<tuple @ 0x1f76d5bc490>,'}'] and goto state 89
INFO:root:Result : <tuple @ 0x1f76d648b40> (('for_default', (('def', 'i', <class 'in ...)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 114
INFO:root:Result : <tuple @ 0x1f76ca14040> (())
INFO:root:Action : Reduce rule [statement -> for_statement statement] with [<tuple @ 0x1f76d648b40>,()] and goto state 115
INFO:root:Result : <tuple @ 0x1f76d5bc490> ((('for_default', (('def', 'i', <class 'i ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [<tuple @ 0x1f76d580400>,<tuple @ 0x1f76d5bc490>] and goto state 115
INFO:root:Result : <tuple @ 0x1f76d6905c0> ((('var', 'z', 'bool', None), ('for_defau ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [<tuple @ 0x1f76d580770>,<tuple @ 0x1f76d6905c0>] and goto state 115
INFO:root:Result : <tuple @ 0x1f76d65dfc0> ((('var', 'y', 'string', '123'), ('var',  ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [None,<tuple @ 0x1f76d65dfc0>] and goto state 85
INFO:root:Result : <tuple @ 0x1f76d580360> ((None, ('var', 'y', 'string', '123'), (' ...)
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL statement . LexToken(NLD,'\n',20,297)
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD . error
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken(NLD,'\n',21,302)
ERROR:root:Error  : . LexToken(KSWITCH,'switch',22,307)
ERROR:root:Error  : . LexToken(ID,'x',22,314)
ERROR:root:Error  : . LexToken({,'{',22,315)
ERROR:root:Error  : . LexToken(NLD,'\n',22,316)
ERROR:root:Error  : . LexToken(KCASE,'case',23,325)
ERROR:root:Error  : . LexToken(INT,3,23,330)
ERROR:root:Error  : . LexToken(:,':',23,331)
ERROR:root:Error  : . LexToken(NLD,'\n',23,332)
ERROR:root:Error  : . LexToken(KFMT,'fmt',24,345)
ERROR:root:Error  : . LexToken(.,'.',24,348)
ERROR:root:Error  : . LexToken(KPRINT,'Println',24,349)
ERROR:root:Error  : . LexToken((,'(',24,356)
ERROR:root:Error  : . LexToken(STRING,'"x ="',24,357)
ERROR:root:Error  : . LexToken(,,',',24,362)
ERROR:root:Error  : . LexToken(INT,3,24,364)
ERROR:root:Error  : . LexToken(),')',24,365)
ERROR:root:Error  : . LexToken(NLD,'\n',24,366)
ERROR:root:Error  : . LexToken(KCASE,'case',25,375)
ERROR:root:Error  : . LexToken(INT,4,25,380)
ERROR:root:Error  : . LexToken(:,':',25,381)
ERROR:root:Error  : . LexToken(NLD,'\n',25,382)
ERROR:root:Error  : . LexToken(KFMT,'fmt',26,395)
ERROR:root:Error  : . LexToken(.,'.',26,398)
ERROR:root:Error  : . LexToken(KPRINT,'Println',26,399)
ERROR:root:Error  : . LexToken((,'(',26,406)
ERROR:root:Error  : . LexToken(STRING,'"x ="',26,407)
ERROR:root:Error  : . LexToken(,,',',26,412)
ERROR:root:Error  : . LexToken(INT,4,26,414)
ERROR:root:Error  : . LexToken(),')',26,415)
ERROR:root:Error  : . LexToken(NLD,'\n',26,416)
ERROR:root:Error  : . LexToken(KDEFAULT,'default',27,425)
ERROR:root:Error  : . LexToken(:,':',27,432)
ERROR:root:Error  : . LexToken(NLD,'\n',27,433)
ERROR:root:Error  : . LexToken(KBREAK,'break',28,446)
ERROR:root:Error  : . LexToken(NLD,'\n',28,451)
ERROR:root:Error  : . LexToken(},'}',29,456)
ERROR:root:Error  : . LexToken(NLD,'\n',29,457)
ERROR:root:Error  : . LexToken(NLD,'\n',30,462)
ERROR:root:Error  : . LexToken(ID,'z',31,467)
ERROR:root:Error  : . LexToken(=,'=',31,469)
ERROR:root:Error  : . LexToken((,'(',31,471)
ERROR:root:Error  : . LexToken(INT,1,31,472)
ERROR:root:Error  : . LexToken(GE,'>',31,474)
ERROR:root:Error  : . LexToken(INT,3,31,476)
ERROR:root:Error  : . LexToken(),')',31,477)
ERROR:root:Error  : . LexToken(EQ,'==',31,479)
ERROR:root:Error  : . LexToken((,'(',31,482)
ERROR:root:Error  : . LexToken(INT,4,31,483)
ERROR:root:Error  : . LexToken(LT,'<',31,485)
ERROR:root:Error  : . LexToken(INT,2,31,487)
ERROR:root:Error  : . LexToken(),')',31,488)
ERROR:root:Error  : . LexToken(NLD,'\n',31,489)
ERROR:root:Error  : . LexToken(KFMT,'fmt',32,494)
ERROR:root:Error  : . LexToken(.,'.',32,497)
ERROR:root:Error  : . LexToken(KPRINT,'Println',32,498)
ERROR:root:Error  : . LexToken((,'(',32,505)
ERROR:root:Error  : . LexToken(ID,'z',32,506)
ERROR:root:Error  : . LexToken(),')',32,507)
ERROR:root:Error  : . LexToken(NLD,'\n',32,508)
ERROR:root:Error  : . LexToken(NLD,'\n',33,513)
ERROR:root:Error  : . LexToken(ID,'y',34,518)
ERROR:root:Error  : . LexToken(PE,'+=',34,520)
ERROR:root:Error  : . LexToken(STRING,'"456"',34,523)
ERROR:root:Error  : . LexToken(NLD,'\n',34,528)
ERROR:root:Error  : . LexToken(KFMT,'fmt',35,533)
ERROR:root:Error  : . LexToken(.,'.',35,536)
ERROR:root:Error  : . LexToken(KPRINT,'Println',35,537)
ERROR:root:Error  : . LexToken((,'(',35,544)
ERROR:root:Error  : . LexToken(ID,'y',35,545)
ERROR:root:Error  : . LexToken(),')',35,546)
ERROR:root:Error  : . LexToken(NLD,'\n',35,547)
ERROR:root:Error  : . LexToken(NLD,'\n',36,552)
ERROR:root:Error  : . LexToken(ID,'a',37,557)
ERROR:root:Error  : . LexToken(DEF,':=',37,559)
ERROR:root:Error  : . LexToken(INT,10,37,562)
ERROR:root:Error  : . LexToken(NLD,'\n',37,564)
ERROR:root:Error  : . LexToken(ID,'a',38,569)
ERROR:root:Error  : . LexToken(TE,'*=',38,571)
ERROR:root:Error  : . LexToken(INT,4,38,574)
ERROR:root:Error  : . LexToken(*,'*',38,576)
ERROR:root:Error  : . LexToken((,'(',38,578)
ERROR:root:Error  : . LexToken(INT,2,38,579)
ERROR:root:Error  : . LexToken(+,'+',38,581)
ERROR:root:Error  : . LexToken(-,'-',38,583)
ERROR:root:Error  : . LexToken(INT,3,38,584)
ERROR:root:Error  : . LexToken(),')',38,585)
ERROR:root:Error  : . LexToken(NLD,'\n',38,586)
ERROR:root:Error  : . LexToken(KFMT,'fmt',39,591)
ERROR:root:Error  : . LexToken(.,'.',39,594)
ERROR:root:Error  : . LexToken(KPRINT,'Println',39,595)
ERROR:root:Error  : . LexToken((,'(',39,602)
ERROR:root:Error  : . LexToken(ID,'a',39,603)
ERROR:root:Error  : . LexToken(),')',39,604)
ERROR:root:Error  : . LexToken(},'}',39,607)
ERROR:root:Error  : . $end
INFO:root:PLY: PARSE DEBUG START
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 7
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [global_statement -> empty] with [None] and goto state 5
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [import_statement -> KIMPORT STRING] with ['import','"fmt"'] and goto state 12
INFO:root:Result : <tuple @ 0x16e89687fc0> (('import', '"fmt"'))
INFO:root:Action : Reduce rule [type -> KINT] with ['int'] and goto state 21
INFO:root:Result : <str @ 0x16e89638bf0> ('int')
INFO:root:Action : Reduce rule [expression -> INT] with [3] and goto state 35
INFO:root:Result : <int @ 0x16e88d76970> (3)
INFO:root:Action : Reduce rule [expr_cond -> expression] with [3] and goto state 34
INFO:root:Result : <int @ 0x16e88d76970> (3)
INFO:root:Action : Reduce rule [assign_expr -> = expr_cond] with ['=',3] and goto state 29
INFO:root:Result : <int @ 0x16e88d76970> (3)
INFO:root:Action : Reduce rule [global_var_assign_statement -> KVAR ID type assign_expr] with ['var','x','int',3] and goto state 8
INFO:root:Result : <tuple @ 0x16e8955fe00> (('global_var_assign', 'x', 'int', 3))
INFO:root:Action : Reduce rule [global_assign_statement -> global_var_assign_statement] with [<tuple @ 0x16e8955fe00>] and goto state 6
INFO:root:Result : <tuple @ 0x16e8955fe00> (('global_var_assign', 'x', 'int', 3))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 7
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [global_statement -> empty] with [None] and goto state 20
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [global_statement -> global_assign_statement NLD global_statement] with [<tuple @ 0x16e8955fe00>,'\n\n',()] and goto state 27
INFO:root:Result : <tuple @ 0x16e895b37c0> ((('global_var_assign', 'x', 'int', 3),))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 82
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_oper -> PE] with ['+='] and goto state 142
INFO:root:Result : <str @ 0x16e89638e70> ('+=')
INFO:root:Action : Reduce rule [expression -> INT] with [1] and goto state 159
INFO:root:Result : <int @ 0x16e88d76930> (1)
INFO:root:Action : Reduce rule [reassign_statement -> ID assign_oper expression] with ['x','+=',1] and goto state 102
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_statement -> reassign_statement NLD] with [None,'\n'] and goto state 90
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [type -> KSTRING] with ['string'] and goto state 156
INFO:root:Result : <str @ 0x16e89638e70> ('string')
INFO:root:Action : Reduce rule [expression -> STRING] with ['"123"'] and goto state 35
INFO:root:Result : <str @ 0x16e89654270> ('123')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['123'] and goto state 34
INFO:root:Result : <str @ 0x16e89654270> ('123')
INFO:root:Action : Reduce rule [assign_expr -> = expr_cond] with ['=','123'] and goto state 171
INFO:root:Result : <str @ 0x16e89654270> ('123')
INFO:root:Action : Reduce rule [var_assign_statement -> KVAR ID type assign_expr] with ['var','y','string','123'] and goto state 98
INFO:root:Result : <tuple @ 0x16e895706d0> (('var', 'y', 'string', '123'))
INFO:root:Action : Reduce rule [assign_statement -> var_assign_statement NLD] with [<tuple @ 0x16e895706d0>,'\n'] and goto state 90
INFO:root:Result : <tuple @ 0x16e895706d0> (('var', 'y', 'string', '123'))
INFO:root:Action : Reduce rule [type -> KBOOL] with ['bool'] and goto state 156
INFO:root:Result : <str @ 0x16e896543b0> ('bool')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 31
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [assign_expr -> empty] with [None] and goto state 171
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [var_assign_statement -> KVAR ID type assign_expr] with ['var','z','bool',None] and goto state 98
INFO:root:Result : <tuple @ 0x16e89570360> (('var', 'z', 'bool', None))
INFO:root:Action : Reduce rule [assign_statement -> var_assign_statement NLD] with [<tuple @ 0x16e89570360>,'\n'] and goto state 90
INFO:root:Result : <tuple @ 0x16e89570360> (('var', 'z', 'bool', None))
INFO:root:Action : Reduce rule [FOR -> KFOR] with ['for'] and goto state 97
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> INT] with [0] and goto state 35
INFO:root:Result : <int @ 0x16e88d76910> (0)
INFO:root:Action : Reduce rule [expr_cond -> expression] with [0] and goto state 157
INFO:root:Result : <int @ 0x16e88d76910> (0)
INFO:root:Action : Reduce rule [def_statement -> ID DEF expr_cond] with ['i',':=',0] and goto state 126
INFO:root:Result : <tuple @ 0x16e89570310> (('def', 'i', <class 'int'>, 0))
INFO:root:Action : Reduce rule [single_line_statement_1 -> def_statement] with [<tuple @ 0x16e89570310>] and goto state 122
INFO:root:Result : <tuple @ 0x16e89570310> (('def', 'i', <class 'int'>, 0))
INFO:root:Action : Reduce rule [expression -> ID] with ['i'] and goto state 68
INFO:root:Result : <int @ 0x16e88d76910> (0)
INFO:root:Action : Reduce rule [rel_op -> LT] with ['<'] and goto state 46
INFO:root:Result : <str @ 0x16e89101e30> ('<')
INFO:root:Action : Reduce rule [expression -> INT] with [10] and goto state 71
INFO:root:Result : <int @ 0x16e88d76a50> (10)
INFO:root:Action : Reduce rule [condition -> expression rel_op expression] with [0,'<',10] and goto state 168
INFO:root:Result : <bool @ 0x7ffed375d868> (True)
INFO:root:Action : Reduce rule [increase_statement -> ID PP] with ['i','++'] and goto state 128
INFO:root:Result : <tuple @ 0x16e89683d40> (('increase', 'i'))
INFO:root:Action : Reduce rule [single_line_statement_2 -> increase_statement] with [<tuple @ 0x16e89683d40>] and goto state 196
INFO:root:Result : <tuple @ 0x16e89683d40> (('increase', 'i'))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 223
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> ID] with ['i'] and goto state 68
INFO:root:Result : <int @ 0x16e88d76930> (1)
INFO:root:Action : Reduce rule [oper -> %] with ['%'] and goto state 45
INFO:root:Result : <str @ 0x16e88f7e0f0> ('%')
INFO:root:Action : Reduce rule [expression -> INT] with [2] and goto state 70
INFO:root:Result : <int @ 0x16e88d76950> (2)
INFO:root:Action : Reduce rule [expression -> expression oper expression] with [1,'%',2] and goto state 68
INFO:root:Result : <int @ 0x16e88d76930> (1)
INFO:root:Action : Reduce rule [rel_op -> EQ] with ['=='] and goto state 46
INFO:root:Result : <str @ 0x16e89653970> ('==')
INFO:root:Action : Reduce rule [expression -> INT] with [0] and goto state 71
INFO:root:Result : <int @ 0x16e88d76910> (0)
INFO:root:Action : Reduce rule [condition -> expression rel_op expression] with [1,'==',0] and goto state 119
INFO:root:Result : <bool @ 0x7ffed375d888> (False)
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 162
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> STRING] with ['"even"'] and goto state 35
INFO:root:Result : <str @ 0x16e896536f0> ('even')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['even'] and goto state 173
INFO:root:Result : <str @ 0x16e896536f0> ('even')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 187
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [args -> empty] with [None] and goto state 185
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [print_statement -> KFMT . KPRINT ( expr_cond args ) NLD] with ['fmt','.','Println','(','even',(),')','\n'] and goto state 86
INFO:root:Result : <tuple @ 0x16e896839c0> (('print', 'even'))
INFO:root:Action : Reduce rule [continue_statement -> KCONTINUE] with ['continue'] and goto state 92
INFO:root:Result : <tuple @ 0x16e88f5b100> (('continue',))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 117
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [statement -> continue_statement statement] with [('continue',),()] and goto state 111
INFO:root:Result : <tuple @ 0x16e895ac580> ((('continue',),))
INFO:root:Action : Reduce rule [statement -> print_statement statement] with [<tuple @ 0x16e896839c0>,<tuple @ 0x16e895ac580>] and goto state 174
INFO:root:Result : <tuple @ 0x16e89682380> ((('print', 'even'), ('continue',)))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 188
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 236
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [expression -> STRING] with ['"odd"'] and goto state 35
INFO:root:Result : <str @ 0x16e896532b0> ('odd')
INFO:root:Action : Reduce rule [expr_cond -> expression] with ['odd'] and goto state 173
INFO:root:Result : <str @ 0x16e896532b0> ('odd')
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 187
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [args -> empty] with [None] and goto state 185
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [print_statement -> KFMT . KPRINT ( expr_cond args ) NLD] with ['fmt','.','Println','(','odd',(),')','\n'] and goto state 86
INFO:root:Result : <tuple @ 0x16e89682080> (('print', 'odd'))
INFO:root:Action : Reduce rule [continue_statement -> KCONTINUE] with ['continue'] and goto state 92
INFO:root:Result : <tuple @ 0x16e88f5b100> (('continue',))
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 117
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [statement -> continue_statement statement] with [('continue',),()] and goto state 111
INFO:root:Result : <tuple @ 0x16e895ac580> ((('continue',),))
INFO:root:Action : Reduce rule [statement -> print_statement statement] with [<tuple @ 0x16e89682080>,<tuple @ 0x16e895ac580>] and goto state 242
INFO:root:Result : <tuple @ 0x16e89681f80> ((('print', 'odd'), ('continue',)))
INFO:root:Action : Reduce rule [NL -> NLD] with ['\n'] and goto state 247
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [else_statement -> KELSE { NL statement NL }] with ['else','{',None,<tuple @ 0x16e89681f80>,None,'}'] and goto state 213
INFO:root:Result : <tuple @ 0x16e89681f40> (('else', (('print', 'odd'), ('continue', ...)
INFO:root:Action : Reduce rule [if_statement -> KIF condition { NL statement NL } else_statement NLD] with ['if',False,'{',None,<tuple @ 0x16e89682380>,None,'}',<tuple @ 0x16e89681f40>,'\n'] and goto state 87
INFO:root:Result : <tuple @ 0x16e8963b040> ((('if', False, (('print', 'even'), ('con ...)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 112
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [statement -> if_statement statement] with [<tuple @ 0x16e8963b040>,()] and goto state 234
INFO:root:Result : <tuple @ 0x16e895ac580> (((('if', False, (('print', 'even'), ('co ...)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 84
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [NL -> empty] with [None] and goto state 240
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [for_statement -> FOR single_line_statement_1 ; condition ; single_line_statement_2 { NL statement NL } NLD] with [None,<tuple @ 0x16e89570310>,';',True,';',<tuple @ 0x16e89683d40>,'{',None,<tuple @ 0x16e895ac580>,None,'}','\n'] and goto state 89
INFO:root:Result : <tuple @ 0x16e8963bbc0> (('for_default', (('def', 'i', <class 'in ...)
INFO:root:Action : Reduce rule [empty -> <empty>] with [] and goto state 93
INFO:root:Result : <NoneType @ 0x7ffed3769cd8> (None)
INFO:root:Action : Reduce rule [statement -> empty] with [None] and goto state 114
INFO:root:Result : <tuple @ 0x16e88d74040> (())
INFO:root:Action : Reduce rule [statement -> for_statement statement] with [<tuple @ 0x16e8963bbc0>,()] and goto state 115
INFO:root:Result : <tuple @ 0x16e895ac580> ((('for_default', (('def', 'i', <class 'i ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [<tuple @ 0x16e89570360>,<tuple @ 0x16e895ac580>] and goto state 115
INFO:root:Result : <tuple @ 0x16e89682380> ((('var', 'z', 'bool', None), ('for_defau ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [<tuple @ 0x16e895706d0>,<tuple @ 0x16e89682380>] and goto state 115
INFO:root:Result : <tuple @ 0x16e8963b040> ((('var', 'y', 'string', '123'), ('var',  ...)
INFO:root:Action : Reduce rule [statement -> assign_statement statement] with [None,<tuple @ 0x16e8963b040>] and goto state 85
INFO:root:Result : <tuple @ 0x16e895702c0> ((None, ('var', 'y', 'string', '123'), (' ...)
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL statement . LexToken(NLD,'\n',21,302)
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { NL . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) { . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( ) . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN ( . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC KMAIN . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement KFUNC . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD global_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement NLD . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement import_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD global_statement . error
ERROR:root:Error  : KPACKAGE KMAIN NLD . error
ERROR:root:Error  : KPACKAGE KMAIN . error
ERROR:root:Error  : KPACKAGE . error
ERROR:root:Error  : . error
ERROR:root:Error  : . LexToken(KSWITCH,'switch',22,307)
ERROR:root:Error  : . LexToken(ID,'x',22,314)
ERROR:root:Error  : . LexToken({,'{',22,315)
ERROR:root:Error  : . LexToken(NLD,'\n',22,316)
ERROR:root:Error  : . LexToken(KCASE,'case',23,325)
ERROR:root:Error  : . LexToken(INT,3,23,330)
ERROR:root:Error  : . LexToken(:,':',23,331)
ERROR:root:Error  : . LexToken(NLD,'\n',23,332)
ERROR:root:Error  : . LexToken(KFMT,'fmt',24,345)
ERROR:root:Error  : . LexToken(.,'.',24,348)
ERROR:root:Error  : . LexToken(KPRINT,'Println',24,349)
ERROR:root:Error  : . LexToken((,'(',24,356)
ERROR:root:Error  : . LexToken(STRING,'"x ="',24,357)
ERROR:root:Error  : . LexToken(,,',',24,362)
ERROR:root:Error  : . LexToken(INT,3,24,364)
ERROR:root:Error  : . LexToken(),')',24,365)
ERROR:root:Error  : . LexToken(NLD,'\n',24,366)
ERROR:root:Error  : . LexToken(KCASE,'case',25,375)
ERROR:root:Error  : . LexToken(INT,4,25,380)
ERROR:root:Error  : . LexToken(:,':',25,381)
ERROR:root:Error  : . LexToken(NLD,'\n',25,382)
ERROR:root:Error  : . LexToken(KFMT,'fmt',26,395)
ERROR:root:Error  : . LexToken(.,'.',26,398)
ERROR:root:Error  : . LexToken(KPRINT,'Println',26,399)
ERROR:root:Error  : . LexToken((,'(',26,406)
ERROR:root:Error  : . LexToken(STRING,'"x ="',26,407)
ERROR:root:Error  : . LexToken(,,',',26,412)
ERROR:root:Error  : . LexToken(INT,4,26,414)
ERROR:root:Error  : . LexToken(),')',26,415)
ERROR:root:Error  : . LexToken(NLD,'\n',26,416)
ERROR:root:Error  : . LexToken(KDEFAULT,'default',27,425)
ERROR:root:Error  : . LexToken(:,':',27,432)
ERROR:root:Error  : . LexToken(NLD,'\n',27,433)
ERROR:root:Error  : . LexToken(KBREAK,'break',28,446)
ERROR:root:Error  : . LexToken(NLD,'\n',28,451)
ERROR:root:Error  : . LexToken(},'}',29,456)
ERROR:root:Error  : . LexToken(NLD,'\n',29,457)
ERROR:root:Error  : . LexToken(NLD,'\n',30,462)
ERROR:root:Error  : . LexToken(ID,'z',31,467)
ERROR:root:Error  : . LexToken(=,'=',31,469)
ERROR:root:Error  : . LexToken((,'(',31,471)
ERROR:root:Error  : . LexToken(INT,1,31,472)
ERROR:root:Error  : . LexToken(GE,'>',31,474)
ERROR:root:Error  : . LexToken(INT,3,31,476)
ERROR:root:Error  : . LexToken(),')',31,477)
ERROR:root:Error  : . LexToken(EQ,'==',31,479)
ERROR:root:Error  : . LexToken((,'(',31,482)
ERROR:root:Error  : . LexToken(INT,4,31,483)
ERROR:root:Error  : . LexToken(LT,'<',31,485)
ERROR:root:Error  : . LexToken(INT,2,31,487)
ERROR:root:Error  : . LexToken(),')',31,488)
ERROR:root:Error  : . LexToken(NLD,'\n',31,489)
ERROR:root:Error  : . LexToken(KFMT,'fmt',32,494)
ERROR:root:Error  : . LexToken(.,'.',32,497)
ERROR:root:Error  : . LexToken(KPRINT,'Println',32,498)
ERROR:root:Error  : . LexToken((,'(',32,505)
ERROR:root:Error  : . LexToken(ID,'z',32,506)
ERROR:root:Error  : . LexToken(),')',32,507)
ERROR:root:Error  : . LexToken(NLD,'\n',32,508)
ERROR:root:Error  : . LexToken(NLD,'\n',33,513)
ERROR:root:Error  : . LexToken(ID,'y',34,518)
ERROR:root:Error  : . LexToken(PE,'+=',34,520)
ERROR:root:Error  : . LexToken(STRING,'"456"',34,523)
ERROR:root:Error  : . LexToken(NLD,'\n',34,528)
ERROR:root:Error  : . LexToken(KFMT,'fmt',35,533)
ERROR:root:Error  : . LexToken(.,'.',35,536)
ERROR:root:Error  : . LexToken(KPRINT,'Println',35,537)
ERROR:root:Error  : . LexToken((,'(',35,544)
ERROR:root:Error  : . LexToken(ID,'y',35,545)
ERROR:root:Error  : . LexToken(),')',35,546)
ERROR:root:Error  : . LexToken(NLD,'\n',35,547)
ERROR:root:Error  : . LexToken(NLD,'\n',36,552)
ERROR:root:Error  : . LexToken(ID,'a',37,557)
ERROR:root:Error  : . LexToken(DEF,':=',37,559)
ERROR:root:Error  : . LexToken(INT,10,37,562)
ERROR:root:Error  : . LexToken(NLD,'\n',37,564)
ERROR:root:Error  : . LexToken(ID,'a',38,569)
ERROR:root:Error  : . LexToken(TE,'*=',38,571)
ERROR:root:Error  : . LexToken(INT,4,38,574)
ERROR:root:Error  : . LexToken(*,'*',38,576)
ERROR:root:Error  : . LexToken((,'(',38,578)
ERROR:root:Error  : . LexToken(INT,2,38,579)
ERROR:root:Error  : . LexToken(+,'+',38,581)
ERROR:root:Error  : . LexToken(-,'-',38,583)
ERROR:root:Error  : . LexToken(INT,3,38,584)
ERROR:root:Error  : . LexToken(),')',38,585)
ERROR:root:Error  : . LexToken(NLD,'\n',38,586)
ERROR:root:Error  : . LexToken(KFMT,'fmt',39,591)
ERROR:root:Error  : . LexToken(.,'.',39,594)
ERROR:root:Error  : . LexToken(KPRINT,'Println',39,595)
ERROR:root:Error  : . LexToken((,'(',39,602)
ERROR:root:Error  : . LexToken(ID,'a',39,603)
ERROR:root:Error  : . LexToken(),')',39,604)
ERROR:root:Error  : . LexToken(},'}',39,607)
ERROR:root:Error  : . $end
